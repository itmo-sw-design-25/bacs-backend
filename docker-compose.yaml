services:
  bacs.api:
    image: ${BACS_IMAGE:-bacs.api}
    container_name: bacs.api
    platform: ${BACS_PLATFORM}
    environment:
      ASPNETCORE_URLS: ${ASPNETCORE_URLS}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      PostgresOptions__Username: ${BACS_PG_USER}
      PostgresOptions__Password: ${BACS_PG_PASSWORD}
      PostgresOptions__Host: ${BACS_PG_HOST}
      PostgresOptions__Port: ${BACS_PG_PORT}
      PostgresOptions__Database: ${BACS_PG_DATABASE}
      PostgresOptions__Schema: ${BACS_PG_SCHEMA}
      PostgresOptions__AdditionalProperties: ${BACS_PG_ADDITIONAL_PROPERTIES}
      MinioOptions__AccessKey: ${BACS_MINIO_ACCESS_KEY}
      MinioOptions__SecretKey: ${BACS_MINIO_SECRET_KEY}
      MinioOptions__Url: ${BACS_MINIO_URL}
      MinioOptions__ProxyUrl: ${BACS_MINIO_PROXY_URL}
      MinioOptions__WithSSL: ${BACS_MINIO_WITH_SSL}
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - bacs

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - bacs
    volumes:
      - ./pg_data:/var/lib/postgresql/data

  minio:
    image: 'bitnami/minio:latest'
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_BROWSER_REDIRECT_URL}
    networks:
      - bacs
    volumes:
      - ./minio_data:/bitnami/minio/data

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
      QUERY_BASE_PATH: "/jaeger"
    networks:
      - bacs

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      # ./grafana_data must have 0777 permission mode
      - ./grafana_data:/var/lib/grafana
      - ./grafana_data/plugins:/var/lib/grafana/plugins
      - ./.deployment/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./.deployment/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/ds.yaml
    user: ${GF_USER_ID} # 0 for root or other for custom user
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_SERVER_ROOT_URL: ${GF_SERVER_ROOT_URL}
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
    networks:
      - bacs

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prom_data:/prometheus
      - ./.deployment/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.external-url=/prometheus/"
    networks:
      - bacs

  seq:
    image: datalust/seq
    container_name: seq
    volumes:
      - ./seq_data:/data
    environment:
      ACCEPT_EULA: 'y'
      SEQ_API_CANONICALURI: ${SEQ_API_CANONICALURI}
    restart: unless-stopped
    networks:
      - bacs

  nginx-proxy:
    image: nginx:1.27.4-alpine-slim
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ${NGINX_CERTS_FULLCHAIN_PATH}:/etc/nginx/certs/fullchain.pem:ro
      - ${NGINX_PRIVKEY_PATH}:/etc/nginx/certs/privkey.pem:ro
      - ./.deployment/nginx/templates:/etc/nginx/templates/:ro
      - ./.deployment/nginx/index.html:/usr/share/nginx/html/index.html:ro
    environment:
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".conf"
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME}
    restart: unless-stopped
    networks:
      - bacs

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker
    privileged: true
    networks:
      - bacs

volumes:
  pg_data:
  grafana_data:
  prom_data:
  seq_data:
  minio_data:

networks:
  bacs:
    driver: bridge
