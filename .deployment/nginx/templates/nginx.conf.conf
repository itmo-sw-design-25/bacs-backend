proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=s3_cache:10m max_size=500m inactive=60m use_temp_path=off;

server {
    listen 443 ssl;
    server_name ${NGINX_SERVER_NAME};

    root /usr/share/nginx/html;
    index index.html;

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location /api {
      proxy_pass http://bacs.api:8080;

      proxy_set_header   Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;

      # WebSocket
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection "Upgrade";
    }

    location /health {
      proxy_pass http://bacs.api:8080/healthchecks-ui;
    }

    location ~* ^/(scalar|swagger|openapi)(/.*)?$ {
        proxy_pass http://bacs.api:8080$uri;
    }

    location ~* ^/(healthchecks-).*$ {
        proxy_pass http://bacs.api:8080$uri;
    }

    location /s3 {
      proxy_pass http://minio:9000;
      rewrite ^/s3(/.*)$ $1 break;

      proxy_cache s3_cache;
      proxy_cache_valid 200 360m;
      add_header X-Cache $upstream_cache_status;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
    }

    location /grafana {
      proxy_set_header Host $http_host;
      proxy_pass http://grafana:3000;

      # WebSocket
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }

    location /prometheus {
      proxy_pass http://prometheus:9090;
    }

    location /jaeger {
      proxy_pass http://jaeger:16686;
    }

    location /minio/ {
      proxy_pass http://minio:9001;
      rewrite ^/minio/(.*) /$1 break;

      # WebSocket
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /seq/ {
      proxy_pass http://seq:80;
      rewrite ^/seq(/.*)$ $1 break;
    }

    location /keycloak {
      proxy_pass https://keycloak:7443;

      proxy_set_header X-Forwarded-For $proxy_protocol_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port 443;
    }

    error_page 500 502 503 504 /50x.html;
}
